
<launch>
    <arg name="namespace" default="$(env UAV_NAMESPACE)"/>
    <arg name="camera_image_raw" default="camera/color/image_raw"/>
    <arg name="camera_depth_image_raw" default="camera/depth/image_raw"/>
    <arg name="segmentation_image_raw" default="segmentation/color/image_raw"/>
    <arg name="labeled_image_raw" default="labeled/color/image_raw"/>
    <arg name="labeled_image_segmented" default="labeled/color/image_segmented"/>
    <arg name="classes" default="[19]"/>

    <group ns="$(arg namespace)">
         <node name="semantic_segmentation_ros" pkg="semantic_segmentation_ros" type="run_semantic_segmentation" output="screen" >
            
            <!-- Input -->
            <!-- Color image_raw topic to="/topic/name" -->
            <remap from="camera/color/image_raw"             to="$(arg camera_image_raw)"/>
            <!-- Output -->
            <!-- Rename output topic if required -->
            <remap from="segmentation/color/image_raw"       to="$(arg segmentation_image_raw)"/>

            <!-- GPU ID -->
            <param name="gpu_id" value="0" />
            <!-- USE CPU -->
            <param name="use_cpu" value="1" />
            <!-- Path to color mat and class name files -->
            <param name="color150_mat_filepath" value="$(find semantic_segmentation_ros)/data/color150.mat" />
            <param name="objects150_csv_filepath" value="$(find semantic_segmentation_ros)/data/object150_info.csv" />
            
            <!-- Path to configuration file. Change path according to encoder-decoder -->
            <param name="cfg_filepath" value="$(find semantic_segmentation_ros)/config/ade20k-hrnetv2.yaml" />
            <!-- Path to model ckpt dir. -->
            <param name="model_ckpt_dir" value="$(find semantic_segmentation_ros)/ckpt/ade20k-hrnet2-c1" />
            <!-- Classes that are extracted. -->
            <rosparam param="classes" subst_value="True">$(arg classes)</rosparam> 
        </node>

        <node name="create_mask" pkg="semantic_segmentation_ros" type="create_mask.py" output="screen" >
            <remap from="segmentation/color/image_raw"              to="$(arg segmentation_image_raw)"/>
        </node>
    </group>

</launch>

